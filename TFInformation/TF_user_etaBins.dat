<file>## ##################################################################
##                                          ##
##                          Matrix Element                               ##
##                          ==============                               ##
##                                                                       ##
##		    Generate the transfer functions                         ##
##	             -------------------------------                        ##
## 	     			                                            ##
##				                                            ##
##    Author: Annik Olbrechts (VUB)                                      ##
##   			                                            ##
##    Version:     1.0.0                         		            ##
##    Last change: 02/02/15			                            ##
##					                                    ##
###########################################################################
###########################################################################
##				                                            ##
##    Instructions:			                                    ##
##								            ##
##	- This program  creates transfer functions in THETA/PHI/E           ##
##	- Those functions must be defined in f77 standard                   ##
##	- In addition to each transfer function(START_TF), you MUST give    ##
##	   the typical width associated to your function (START_WIDTH)	    ##
##      - If a transfer functions is not defined here it will by default ##
##          - equals to one for neutrino/neutralino                      ##
##          - a delta functions for the rest                             ##
###########################################################################
##                                                                       ##
##   Syntax/variables:                                                   ## 
##                                                                       ##
##  - a definition for transfer functions should define the variable tf  ##
##    while a definition for the width shoud define the variable width   ## 
##	- You can use all standard f77 functions. (All variables are	    ##
##		in double precision format). 	                            ##
##	- The experimental event is  defined by the variable pexp(i)        ##
##		i=0->3 (0->E,1->Px,2->Py,3->Pz)	                            ##
##	- The partonic event is defined by the variable p(i)   	            ##
##		i=0->3 (0->E,1->Px,2->Py,3->Pz)			            ##
##		sigma can not depend on those variables		            ##
##	- You can use 10 local variables			            ##
##		(double precision):  prov1,prov2,...,prov10	            ##
##	- You can call specific functions on p or pexp:	                    ##
##		-pt(p)   : transverse momenta 			            ##
##		-eta(p)  : pseudo-rapidity			            ##
##		-rap(p)  : rapidity					    ##
##		-theta(p): polar angle				            ##
##		-phi(p)	 : azimuthal angle		  	     	    ##
##	- The whole LHCO information is available.                          ##
##              -run_number,trigger                       	 	    ##
##		-eta_init(N),phi_init(N),pt_init(N)                         ##
##              -j_mass(N),ntrk(N),btag(N),had_em(N)     	            ##
##		-dummy1(N),dummy2(N)		                            ##
##	    N is the LHCO tag(first column)	                            ##
##		- current tag is n_lhco  				    ##
##		- tag for missing ET is met_lhco			    ##
##				  					    ##
##	- You can incorporate parameters that will be passed through        ##
##	        the transfert_card.dat. Those ones must have the            ##
##		following syntax: #1,#2,#3,.. You can restart 		    ##
##		the assignement for each different transfer function	    ##
##	- In addition to each transfer function(tf_), you MUST give	    ##
##		the typical width associated to your function (sigma_)	    ##
##		This is needed for the phase space generator      	    ##
##									    ##
###########################################################################
###########################################################################

##**********************************************************************##
##             TF for bjet                                      
##**********************************************************************##
<block name='bjet'>   #name can be anything
  <info> double gaussian with parameter depending on the energy </info>
  <particles> b </particles>
  <width_type> thin </width_type>
  #width type should be thin or large (thin is for energy accurate up to 5-10%)
  <variable name='E'>
    <tf>
      IF( ABS(eta(pexp)) .LE. 0.375) THEN 
        prov1=(#1+#2*p(0)+#3*p(0)**2+#4*p(0)**3+#5*p(0)**4))
        IF( p(0) .LE. 35.5556) THEN 
          prov1=-0.551799
        ENDIF 

        IF( p(0) .GE. 163.333) THEN 
          prov1 = -0.951727
        ENDIF 

        prov2=(#6+#7*dsqrt(p(0))+#8*p(0))
        IF( p(0) .LE. 35.5556) THEN 
          prov2=5.59434
        ENDIF 

        IF( p(0) .GE. 163.333) THEN 
          prov2 = 13.1006
        ENDIF 

        prov3=(#9+#10*p(0)+#11*p(0)**2+#12*p(0)**3+#13*p(0)**4))
        IF( p(0) .LE. 35.5556) THEN 
          prov3=0.195233
        ENDIF 

        IF( p(0) .GE. 163.333) THEN 
          prov3 = 0.408945
        ENDIF 

        prov4=(#14+#15*p(0)+#16*p(0)**2+#17*p(0)**3+#18*p(0)**4))
        IF( p(0) .LE. 57.7778) THEN 
          prov4=72.6264
        ENDIF 

        IF( p(0) .GE. 163.333) THEN 
          prov4 = 88.5818
        ENDIF 

        prov5=(#19+#20*dsqrt(p(0))+#21*p(0))
        IF( p(0) .LE. 57.7778) THEN 
          prov5=42.6518
        ENDIF 

        IF( p(0) .GE. 163.333) THEN 
          prov5 = 66.8361
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.375 .AND. ABS(eta(pexp)) .LE. 0.75) THEN 
        prov1=(#22+#23*p(0)+#24*p(0)**2+#25*p(0)**3+#26*p(0)**4))
        IF( p(0) .LE. 35.5556) THEN 
          prov1=-2.20294
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov1 = -3.74853
        ENDIF 

        prov2=(#27+#28*dsqrt(p(0))+#29*p(0))
        IF( p(0) .LE. 35.5556) THEN 
          prov2=5.40482
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov2 = 15.9495
        ENDIF 

        prov3=(#30+#31*p(0)+#32*p(0)**2+#33*p(0)**3+#34*p(0)**4))
        IF( p(0) .LE. 35.5556) THEN 
          prov3=0.143551
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov3 = 0.394883
        ENDIF 

        prov4=(#35+#36*p(0)+#37*p(0)**2+#38*p(0)**3+#39*p(0)**4))
        IF( p(0) .LE. 57.7778) THEN 
          prov4=81.2952
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov4 = 108.129
        ENDIF 

        prov5=(#40+#41*dsqrt(p(0))+#42*p(0))
        IF( p(0) .LE. 57.7778) THEN 
          prov5=-50.0338
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov5 = -75.9238
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.75 .AND. ABS(eta(pexp)) .LE. 1.45) THEN 
        prov1=(#43+#44*p(0)+#45*p(0)**2+#46*p(0)**3+#47*p(0)**4))
        IF( p(0) .LE. 46.6667) THEN 
          prov1=-2.99569
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov1 = 0.620611
        ENDIF 

        prov2=(#48+#49*dsqrt(p(0))+#50*p(0))
        IF( p(0) .LE. 46.6667) THEN 
          prov2=6.4942
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov2 = 19.7043
        ENDIF 

        prov3=(#51+#52*p(0)+#53*p(0)**2+#54*p(0)**3+#55*p(0)**4))
        IF( p(0) .LE. 46.6667) THEN 
          prov3=0.32368
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov3 = 0.54669
        ENDIF 

        prov4=(#56+#57*p(0)+#58*p(0)**2+#59*p(0)**3+#60*p(0)**4))
        IF( p(0) .LE. 68.8889) THEN 
          prov4=-146.857
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov4 = 24.8055
        ENDIF 

        prov5=(#61+#62*dsqrt(p(0))+#63*p(0))
        IF( p(0) .LE. 68.8889) THEN 
          prov5=106.624
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov5 = 77.9651
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 1.45 .AND. ABS(eta(pexp)) .LE. 2.5) THEN 
        prov1=(#64+#65*p(0)+#66*p(0)**2+#67*p(0)**3+#68*p(0)**4))
        IF( p(0) .LE. 91.1111) THEN 
          prov1=-1.24438
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov1 = 5.94624
        ENDIF 

        prov2=(#69+#70*dsqrt(p(0))+#71*p(0))
        IF( p(0) .LE. 91.1111) THEN 
          prov2=13.9001
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov2 = 34.8513
        ENDIF 

        prov3=(#72+#73*p(0)+#74*p(0)**2+#75*p(0)**3+#76*p(0)**4))
        IF( p(0) .LE. 91.1111) THEN 
          prov3=0.255872
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov3 = 0.18053
        ENDIF 

        prov4=(#77+#78*p(0)+#79*p(0)**2+#80*p(0)**3+#81*p(0)**4))
        IF( p(0) .LE. 91.1111) THEN 
          prov4=-30.8875
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov4 = 70.1361
        ENDIF 

        prov5=(#82+#83*dsqrt(p(0))+#84*p(0))
        IF( p(0) .LE. 91.1111) THEN 
          prov5=25.4954
        ENDIF 

        IF( p(0) .GE. 235.556) THEN 
          prov5 = 20.0772
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
    </tf> 
    <width>
      IF( ABS(eta(pexp)) .LE. 0.375) THEN 
        prov2=(#6+#7*dsqrt(pexp(0))+#8*pexp(0))
        prov5=(#19+#20*dsqrt(pexp(0))+#21*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.375 .AND. ABS(eta(pexp)) .LE. 0.75) THEN 
        prov2=(#27+#28*dsqrt(pexp(0))+#29*pexp(0))
        prov5=(#40+#41*dsqrt(pexp(0))+#42*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.75 .AND. ABS(eta(pexp)) .LE. 1.45) THEN 
        prov2=(#48+#49*dsqrt(pexp(0))+#50*pexp(0))
        prov5=(#61+#62*dsqrt(pexp(0))+#63*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 1.45 .AND. ABS(eta(pexp)) .LE. 2.5) THEN 
        prov2=(#69+#70*dsqrt(pexp(0))+#71*pexp(0))
        prov5=(#82+#83*dsqrt(pexp(0))+#84*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
    </width> 
  </variable>
</block>
##**********************************************************************##
##             TF for electron                                      
##**********************************************************************##
<block name='electron'>   #name can be anything
  <info> double gaussian with parameter depending on the energy </info>
  <particles> el </particles>
  <width_type> thin </width_type>
  #width type should be thin or large (thin is for energy accurate up to 5-10%)
  <variable name='E'>
    <tf>
      IF( ABS(eta(pexp)) .LE. 0.375) THEN 
        prov1=(#1+#2*p(0)+#3*p(0)**2+#4*p(0)**3+#5*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov1=14.6578
        ENDIF 

        IF( p(0) .GE. 144) THEN 
          prov1 = 16.0204
        ENDIF 

        prov2=(#6+#7*dsqrt(p(0))+#8*p(0))
        IF( p(0) .LE. 33.8) THEN 
          prov2=-5.17424
        ENDIF 

        IF( p(0) .GE. 144) THEN 
          prov2 = 1.16975
        ENDIF 

        prov3=(#9+#10*p(0)+#11*p(0)**2+#12*p(0)**3+#13*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov3=0.800049
        ENDIF 

        IF( p(0) .GE. 144) THEN 
          prov3 = 0.306425
        ENDIF 

        prov4=(#14+#15*p(0)+#16*p(0)**2+#17*p(0)**3+#18*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov4=-0.226321
        ENDIF 

        IF( p(0) .GE. 144) THEN 
          prov4 = 0.448388
        ENDIF 

        prov5=(#19+#20*dsqrt(p(0))+#21*p(0))
        IF( p(0) .LE. 33.8) THEN 
          prov5=-0.664595
        ENDIF 

        IF( p(0) .GE. 144) THEN 
          prov5 = -1.48846
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.375 .AND. ABS(eta(pexp)) .LE. 0.75) THEN 
        prov1=(#22+#23*p(0)+#24*p(0)**2+#25*p(0)**3+#26*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov1=-2.03347
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov1 = 11.4761
        ENDIF 

        prov2=(#27+#28*dsqrt(p(0))+#29*p(0))
        IF( p(0) .LE. 33.8) THEN 
          prov2=-0.0067783
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov2 = -0.00931496
        ENDIF 

        prov3=(#30+#31*p(0)+#32*p(0)**2+#33*p(0)**3+#34*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov3=0.000989531
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov3 = 0.000439884
        ENDIF 

        prov4=(#35+#36*p(0)+#37*p(0)**2+#38*p(0)**3+#39*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov4=-0.173536
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov4 = 1.67588
        ENDIF 

        prov5=(#40+#41*dsqrt(p(0))+#42*p(0))
        IF( p(0) .LE. 33.8) THEN 
          prov5=0.850889
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov5 = 2.59632
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.75 .AND. ABS(eta(pexp)) .LE. 1.45) THEN 
        prov1=(#43+#44*p(0)+#45*p(0)**2+#46*p(0)**3+#47*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov1=16.6462
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov1 = 44.1449
        ENDIF 

        prov2=(#48+#49*dsqrt(p(0))+#50*p(0))
        IF( p(0) .LE. 33.8) THEN 
          prov2=-20
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov2 = -33.8654
        ENDIF 

        prov3=(#51+#52*p(0)+#53*p(0)**2+#54*p(0)**3+#55*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov3=9.92968e-08
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov3 = 0.430065
        ENDIF 

        prov4=(#56+#57*p(0)+#58*p(0)**2+#59*p(0)**3+#60*p(0)**4))
        IF( p(0) .LE. 33.8) THEN 
          prov4=-0.310079
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov4 = -0.165906
        ENDIF 

        prov5=(#61+#62*dsqrt(p(0))+#63*p(0))
        IF( p(0) .LE. 33.8) THEN 
          prov5=0.434162
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov5 = -2.64316
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 1.45 .AND. ABS(eta(pexp)) .LE. 2.5) THEN 
        prov1=(#64+#65*p(0)+#66*p(0)**2+#67*p(0)**3+#68*p(0)**4))
        IF( p(0) .LE. 79.4) THEN 
          prov1=-8.9937
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov1 = -86.3575
        ENDIF 

        prov2=(#69+#70*dsqrt(p(0))+#71*p(0))
        IF( p(0) .LE. 79.4) THEN 
          prov2=-0.00120507
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov2 = -0.126769
        ENDIF 

        prov3=(#72+#73*p(0)+#74*p(0)**2+#75*p(0)**3+#76*p(0)**4))
        IF( p(0) .LE. 79.4) THEN 
          prov3=0.037612
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov3 = 0.00596849
        ENDIF 

        prov4=(#77+#78*p(0)+#79*p(0)**2+#80*p(0)**3+#81*p(0)**4))
        IF( p(0) .LE. 79.4) THEN 
          prov4=0.120086
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov4 = -2.98361
        ENDIF 

        prov5=(#82+#83*dsqrt(p(0))+#84*p(0))
        IF( p(0) .LE. 79.4) THEN 
          prov5=0.628322
        ENDIF 

        IF( p(0) .GE. 223.8) THEN 
          prov5 = 6.1356
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
    </tf> 
    <width>
      IF( ABS(eta(pexp)) .LE. 0.375) THEN 
        prov2=(#6+#7*dsqrt(pexp(0))+#8*pexp(0))
        prov5=(#19+#20*dsqrt(pexp(0))+#21*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.375 .AND. ABS(eta(pexp)) .LE. 0.75) THEN 
        prov2=(#27+#28*dsqrt(pexp(0))+#29*pexp(0))
        prov5=(#40+#41*dsqrt(pexp(0))+#42*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.75 .AND. ABS(eta(pexp)) .LE. 1.45) THEN 
        prov2=(#48+#49*dsqrt(pexp(0))+#50*pexp(0))
        prov5=(#61+#62*dsqrt(pexp(0))+#63*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 1.45 .AND. ABS(eta(pexp)) .LE. 2.5) THEN 
        prov2=(#69+#70*dsqrt(pexp(0))+#71*pexp(0))
        prov5=(#82+#83*dsqrt(pexp(0))+#84*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
    </width> 
  </variable>
</block>
##**********************************************************************##
##             TF for nonbjet                                      
##**********************************************************************##
<block name='nonbjet'>   #name can be anything
  <info> double gaussian with parameter depending on the energy </info>
  <particles> u,d,s,c,g </particles>
  <width_type> thin </width_type>
  #width type should be thin or large (thin is for energy accurate up to 5-10%)
  <variable name='E'>
    <tf>
      IF( ABS(eta(pexp)) .LE. 0.375) THEN 
        prov1=(#1+#2*p(0)+#3*p(0)**2+#4*p(0)**3+#5*p(0)**4))
        IF( p(0) .LE. 33.4375) THEN 
          prov1=-2.64089
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov1 = -4.43842
        ENDIF 

        prov2=(#6+#7*dsqrt(p(0))+#8*p(0))
        IF( p(0) .LE. 33.4375) THEN 
          prov2=-5.3233
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov2 = -14.8163
        ENDIF 

        prov3=(#9+#10*p(0)+#11*p(0)**2+#12*p(0)**3+#13*p(0)**4))
        IF( p(0) .LE. 33.4375) THEN 
          prov3=0.18224
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov3 = 0.0669026
        ENDIF 

        prov4=(#14+#15*p(0)+#16*p(0)**2+#17*p(0)**3+#18*p(0)**4))
        IF( p(0) .LE. 46.0938) THEN 
          prov4=-53.2765
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov4 = -47.9617
        ENDIF 

        prov5=(#19+#20*dsqrt(p(0))+#21*p(0))
        IF( p(0) .LE. 46.0938) THEN 
          prov5=25.7294
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov5 = 107.032
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.375 .AND. ABS(eta(pexp)) .LE. 0.75) THEN 
        prov1=(#22+#23*p(0)+#24*p(0)**2+#25*p(0)**3+#26*p(0)**4))
        IF( p(0) .LE. 33.4375) THEN 
          prov1=-4.01172
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov1 = -4.05598
        ENDIF 

        prov2=(#27+#28*dsqrt(p(0))+#29*p(0))
        IF( p(0) .LE. 33.4375) THEN 
          prov2=5.06628
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov2 = 15.4889
        ENDIF 

        prov3=(#30+#31*p(0)+#32*p(0)**2+#33*p(0)**3+#34*p(0)**4))
        IF( p(0) .LE. 33.4375) THEN 
          prov3=0.325932
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov3 = 0.0860535
        ENDIF 

        prov4=(#35+#36*p(0)+#37*p(0)**2+#38*p(0)**3+#39*p(0)**4))
        IF( p(0) .LE. 54.5312) THEN 
          prov4=-60.6358
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov4 = -10.4453
        ENDIF 

        prov5=(#40+#41*dsqrt(p(0))+#42*p(0))
        IF( p(0) .LE. 54.5312) THEN 
          prov5=-44.0894
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov5 = -99.0242
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.75 .AND. ABS(eta(pexp)) .LE. 1.45) THEN 
        prov1=(#43+#44*p(0)+#45*p(0)**2+#46*p(0)**3+#47*p(0)**4))
        IF( p(0) .LE. 41.875) THEN 
          prov1=-6.06872
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov1 = -3.32314
        ENDIF 

        prov2=(#48+#49*dsqrt(p(0))+#50*p(0))
        IF( p(0) .LE. 41.875) THEN 
          prov2=5.96764
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov2 = 19.9292
        ENDIF 

        prov3=(#51+#52*p(0)+#53*p(0)**2+#54*p(0)**3+#55*p(0)**4))
        IF( p(0) .LE. 41.875) THEN 
          prov3=0.37013
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov3 = 0.445743
        ENDIF 

        prov4=(#56+#57*p(0)+#58*p(0)**2+#59*p(0)**3+#60*p(0)**4))
        IF( p(0) .LE. 54.5312) THEN 
          prov4=-20.4859
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov4 = -0.236524
        ENDIF 

        prov5=(#61+#62*dsqrt(p(0))+#63*p(0))
        IF( p(0) .LE. 54.5312) THEN 
          prov5=12.4776
        ENDIF 

        IF( p(0) .GE. 151.562) THEN 
          prov5 = 37.3247
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 1.45 .AND. ABS(eta(pexp)) .LE. 2.5) THEN 
        prov1=(#64+#65*p(0)+#66*p(0)**2+#67*p(0)**3+#68*p(0)**4))
        IF( p(0) .LE. 75.625) THEN 
          prov1=-8.67956
        ENDIF 

        IF( p(0) .GE. 164.219) THEN 
          prov1 = 12.2855
        ENDIF 

        prov2=(#69+#70*dsqrt(p(0))+#71*p(0))
        IF( p(0) .LE. 75.625) THEN 
          prov2=11.1165
        ENDIF 

        IF( p(0) .GE. 164.219) THEN 
          prov2 = 18.446
        ENDIF 

        prov3=(#72+#73*p(0)+#74*p(0)**2+#75*p(0)**3+#76*p(0)**4))
        IF( p(0) .LE. 75.625) THEN 
          prov3=0.308896
        ENDIF 

        IF( p(0) .GE. 164.219) THEN 
          prov3 = 0.834997
        ENDIF 

        prov4=(#77+#78*p(0)+#79*p(0)**2+#80*p(0)**3+#81*p(0)**4))
        IF( p(0) .LE. 75.625) THEN 
          prov4=-22.8029
        ENDIF 

        IF( p(0) .GE. 164.219) THEN 
          prov4 = -14.2039
        ENDIF 

        prov5=(#82+#83*dsqrt(p(0))+#84*p(0))
        IF( p(0) .LE. 75.625) THEN 
          prov5=3.5959
        ENDIF 

        IF( p(0) .GE. 164.219) THEN 
          prov5 = 13.0671
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
    </tf> 
    <width>
      IF( ABS(eta(pexp)) .LE. 0.375) THEN 
        prov2=(#6+#7*dsqrt(pexp(0))+#8*pexp(0))
        prov5=(#19+#20*dsqrt(pexp(0))+#21*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.375 .AND. ABS(eta(pexp)) .LE. 0.75) THEN 
        prov2=(#27+#28*dsqrt(pexp(0))+#29*pexp(0))
        prov5=(#40+#41*dsqrt(pexp(0))+#42*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.75 .AND. ABS(eta(pexp)) .LE. 1.45) THEN 
        prov2=(#48+#49*dsqrt(pexp(0))+#50*pexp(0))
        prov5=(#61+#62*dsqrt(pexp(0))+#63*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 1.45 .AND. ABS(eta(pexp)) .LE. 2.5) THEN 
        prov2=(#69+#70*dsqrt(pexp(0))+#71*pexp(0))
        prov5=(#82+#83*dsqrt(pexp(0))+#84*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
    </width> 
  </variable>
</block>
##**********************************************************************##
##             TF for muon                                      
##**********************************************************************##
<block name='muon'>   #name can be anything
  <info> double gaussian with parameter depending on the energy </info>
  <particles> mu </particles>
  <width_type> thin </width_type>
  #width type should be thin or large (thin is for energy accurate up to 5-10%)
  <variable name='E'>
    <tf>
      IF( ABS(eta(pexp)) .LE. 0.375) THEN 
        prov1=(#1+#2*p(0)+#3*p(0)**2+#4*p(0)**3+#5*p(0)**4))
        IF( p(0) .LE. 25) THEN 
          prov1=15.5902
        ENDIF 

        IF( p(0) .GE. 100) THEN 
          prov1 = 35.9388
        ENDIF 

        prov2=(#6+#7*dsqrt(p(0))+#8*p(0))
        IF( p(0) .LE. 25) THEN 
          prov2=6.4922
        ENDIF 

        IF( p(0) .GE. 100) THEN 
          prov2 = 14.4353
        ENDIF 

        prov3=(#9+#10*p(0)+#11*p(0)**2+#12*p(0)**3+#13*p(0)**4))
        IF( p(0) .LE. 25) THEN 
          prov3=0.995497
        ENDIF 

        IF( p(0) .GE. 100) THEN 
          prov3 = 0.407316
        ENDIF 

        prov4=(#14+#15*p(0)+#16*p(0)**2+#17*p(0)**3+#18*p(0)**4))
        IF( p(0) .LE. 25) THEN 
          prov4=0.0102392
        ENDIF 

        IF( p(0) .GE. 100) THEN 
          prov4 = 0.731954
        ENDIF 

        prov5=(#19+#20*dsqrt(p(0))+#21*p(0))
        IF( p(0) .LE. 25) THEN 
          prov5=0.295419
        ENDIF 

        IF( p(0) .GE. 100) THEN 
          prov5 = 1.75549
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.375 .AND. ABS(eta(pexp)) .LE. 0.75) THEN 
        prov1=(#22+#23*p(0)+#24*p(0)**2+#25*p(0)**3+#26*p(0)**4))
        IF( p(0) .LE. 35) THEN 
          prov1=22.4363
        ENDIF 

        IF( p(0) .GE. 130) THEN 
          prov1 = 84.2208
        ENDIF 

        prov2=(#27+#28*dsqrt(p(0))+#29*p(0))
        IF( p(0) .LE. 35) THEN 
          prov2=9.53604
        ENDIF 

        IF( p(0) .GE. 130) THEN 
          prov2 = 27.9422
        ENDIF 

        prov3=(#30+#31*p(0)+#32*p(0)**2+#33*p(0)**3+#34*p(0)**4))
        IF( p(0) .LE. 35) THEN 
          prov3=1.04272
        ENDIF 

        IF( p(0) .GE. 130) THEN 
          prov3 = 0.99513
        ENDIF 

        prov4=(#35+#36*p(0)+#37*p(0)**2+#38*p(0)**3+#39*p(0)**4))
        IF( p(0) .LE. 35) THEN 
          prov4=0.0649379
        ENDIF 

        IF( p(0) .GE. 130) THEN 
          prov4 = 1.19894
        ENDIF 

        prov5=(#40+#41*dsqrt(p(0))+#42*p(0))
        IF( p(0) .LE. 35) THEN 
          prov5=0.437457
        ENDIF 

        IF( p(0) .GE. 130) THEN 
          prov5 = 2.3298
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.75 .AND. ABS(eta(pexp)) .LE. 1.45) THEN 
        prov1=(#43+#44*p(0)+#45*p(0)**2+#46*p(0)**3+#47*p(0)**4))
        IF( p(0) .LE. 40) THEN 
          prov1=27.0265
        ENDIF 

        IF( p(0) .GE. 165) THEN 
          prov1 = 42.4596
        ENDIF 

        prov2=(#48+#49*dsqrt(p(0))+#50*p(0))
        IF( p(0) .LE. 40) THEN 
          prov2=10.8325
        ENDIF 

        IF( p(0) .GE. 165) THEN 
          prov2 = 18.2282
        ENDIF 

        prov3=(#51+#52*p(0)+#53*p(0)**2+#54*p(0)**3+#55*p(0)**4))
        IF( p(0) .LE. 40) THEN 
          prov3=1.00027
        ENDIF 

        IF( p(0) .GE. 165) THEN 
          prov3 = 0.35905
        ENDIF 

        prov4=(#56+#57*p(0)+#58*p(0)**2+#59*p(0)**3+#60*p(0)**4))
        IF( p(0) .LE. 40) THEN 
          prov4=0.0913607
        ENDIF 

        IF( p(0) .GE. 165) THEN 
          prov4 = 1.72209
        ENDIF 

        prov5=(#61+#62*dsqrt(p(0))+#63*p(0))
        IF( p(0) .LE. 40) THEN 
          prov5=0.704138
        ENDIF 

        IF( p(0) .GE. 165) THEN 
          prov5 = 3.63876
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 1.45 .AND. ABS(eta(pexp)) .LE. 2.5) THEN 
        prov1=(#64+#65*p(0)+#66*p(0)**2+#67*p(0)**3+#68*p(0)**4))
        IF( p(0) .LE. 70) THEN 
          prov1=40.9534
        ENDIF 

        IF( p(0) .GE. 150) THEN 
          prov1 = 35.9563
        ENDIF 

        prov2=(#69+#70*dsqrt(p(0))+#71*p(0))
        IF( p(0) .LE. 70) THEN 
          prov2=13.8703
        ENDIF 

        IF( p(0) .GE. 150) THEN 
          prov2 = 12.7506
        ENDIF 

        prov3=(#72+#73*p(0)+#74*p(0)**2+#75*p(0)**3+#76*p(0)**4))
        IF( p(0) .LE. 70) THEN 
          prov3=0.958415
        ENDIF 

        IF( p(0) .GE. 150) THEN 
          prov3 = 0.414055
        ENDIF 

        prov4=(#77+#78*p(0)+#79*p(0)**2+#80*p(0)**3+#81*p(0)**4))
        IF( p(0) .LE. 70) THEN 
          prov4=0.303763
        ENDIF 

        IF( p(0) .GE. 150) THEN 
          prov4 = 1.4056
        ENDIF 

        prov5=(#82+#83*dsqrt(p(0))+#84*p(0))
        IF( p(0) .LE. 70) THEN 
          prov5=1.51622
        ENDIF 

        IF( p(0) .GE. 150) THEN 
          prov5 = 4.16799
        ENDIF 


        tf=(exp(-(p(0)-pexp(0)-prov1)**2/2d0/prov2**2))          !first gaussian
        tf=tf+prov3*(exp(-(p(0)-pexp(0)-prov4)**2/2d0/prov5**2)) !second gaussian
        tf=tf*((1d0/dsqrt(2d0*pi))/(dsqrt(prov2*prov2)+prov3*dsqrt(prov5*prov5)))            !normalisation
      ENDIF 
    </tf> 
    <width>
      IF( ABS(eta(pexp)) .LE. 0.375) THEN 
        prov2=(#6+#7*dsqrt(pexp(0))+#8*pexp(0))
        prov5=(#19+#20*dsqrt(pexp(0))+#21*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.375 .AND. ABS(eta(pexp)) .LE. 0.75) THEN 
        prov2=(#27+#28*dsqrt(pexp(0))+#29*pexp(0))
        prov5=(#40+#41*dsqrt(pexp(0))+#42*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 0.75 .AND. ABS(eta(pexp)) .LE. 1.45) THEN 
        prov2=(#48+#49*dsqrt(pexp(0))+#50*pexp(0))
        prov5=(#61+#62*dsqrt(pexp(0))+#63*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
 
      IF( ABS(eta(pexp)) .GT. 1.45 .AND. ABS(eta(pexp)) .LE. 2.5) THEN 
        prov2=(#69+#70*dsqrt(pexp(0))+#71*pexp(0))
        prov5=(#82+#83*dsqrt(pexp(0))+#84*pexp(0))
 
        width = max(prov2, prov5) 
      ENDIF 
    </width> 
  </variable>
</block>
</file>